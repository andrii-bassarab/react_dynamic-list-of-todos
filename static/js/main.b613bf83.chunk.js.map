{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setCurrentUserId","setCurrentTodo","className","map","todo","id","userId","title","completed","classNames","type","onClick","TodoFilter","getQuery","getOption","useState","query","setQuery","selectedField","setSelectedFieldy","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","closeTodoModal","selectTodo","user","setUser","useEffect","getUser","href","email","name","App","setTodos","setUserId","setSelectedTodo","queryToFilter","setQueryToFilter","selectedStatus","setSelectedStatus","visibleGoods","filter","toLocaleLowerCase","includes","option","length","newUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b613bf83.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setCurrentUserId: (newUserId: number) => void,\n  setCurrentTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos, selectedTodo, setCurrentUserId, setCurrentTodo,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          userId,\n          title,\n          completed,\n        } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            {completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              )\n              : <td className=\"is-vcentered\" />}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodo?.id === id\n                ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      setCurrentTodo(null);\n                      setCurrentUserId(0);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                )\n                : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      setCurrentUserId(userId);\n                      setCurrentTodo(todo);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React, { useState } from 'react';\n\ntype Props = {\n  getQuery: (query: string) => void,\n  getOption: (option: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  { getQuery, getOption },\n) => {\n  const [query, setQuery] = useState('');\n  const [selectedField, setSelectedFieldy] = useState('all');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedField}\n            onChange={(event) => {\n              setSelectedFieldy(event.target.value);\n              getOption(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            getQuery(event.target.value);\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n                getQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  userId: number,\n  selectedTodo: Todo | null,\n  closeTodoModal: () => void\n  setCurrentTodo: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    userId, selectedTodo, closeTodoModal, setCurrentTodo: selectTodo,\n  },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                closeTodoModal();\n                selectTodo();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [userId, setUserId] = useState(0);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [queryToFilter, setQueryToFilter] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState('all');\n\n  let visibleGoods = todos;\n\n  switch (selectedStatus) {\n    case 'completed':\n      visibleGoods = visibleGoods.filter(todo => todo.completed === true);\n      break;\n\n    case 'active':\n      visibleGoods = todos.filter(todo => todo.completed === false);\n      break;\n\n    default: visibleGoods = todos;\n  }\n\n  visibleGoods = visibleGoods.filter(todo => todo.title.toLocaleLowerCase()\n    .includes(queryToFilter.toLocaleLowerCase()));\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                getQuery={(query) => setQueryToFilter(query)}\n                getOption={(option) => setSelectedStatus(option)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleGoods.length > 0 && todos.length > 0\n                && (\n                  <TodoList\n                    todos={visibleGoods}\n                    selectedTodo={selectedTodo}\n                    setCurrentUserId={(newUserId) => setUserId(newUserId)}\n                    setCurrentTodo={(todo) => setSelectedTodo(todo)}\n                  />\n                )}\n              {visibleGoods.length === 0 && todos.length === 0 && <Loader />}\n              {visibleGoods.length === 0 && todos.length > 0\n                && (\n                  <table className=\"table is-narrow is-fullwidth\">\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>\n                          <span className=\"icon\">\n                            <i className=\"fas fa-check\" />\n                          </span>\n                        </th>\n                        <th>Title</th>\n                        <th> </th>\n                      </tr>\n                    </thead>\n                  </table>\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {userId !== 0\n        && (\n          <TodoModal\n            userId={userId}\n            selectedTodo={selectedTodo}\n            closeTodoModal={() => setUserId(0)}\n            setCurrentTodo={() => setSelectedTodo(null)}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}